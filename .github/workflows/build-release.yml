name: Build Release
on:
  push:
    branches: [master]
  
jobs:
  build-soljson:
    env:
      DOCKER_REPOSITORY: solbuildpackpusher/solidity-buildpack-deps
      CONTAINER_NAME: ems
      IMAGE_NAME: buildpack-deps
      CIRCLE_BRANCH: release

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout External Repository
        uses: actions/checkout@v3
        with:
          repository: shinkee635/solidity76
          ref: master
          path: solidity76
      
      - name: Build soljson
        run: |
          cd solidity76
          chmod +x scripts/ci/docker_build.sh
          cp scripts/docker/buildpack-deps/emscripten.jam ./
          scripts/ci/docker_build.sh ${{ env.IMAGE_NAME }} emscripten ${{ env.DOCKER_REPOSITORY }} ${{ env.CONTAINER_NAME}}
          scripts/build_emscripten.sh

      - name: Upload Artifact 
        uses: actions/upload-artifact@v4
        with:
          name: soljson
          path: solidity76/upload/soljson.js


  build-ethereumjs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout ethereumjs-monorepo
        uses: actions/checkout@v3
        with:
          repository: shinkee635/ethereumjs-monorepo
          ref: util32
          path: ethereumjs-monorepo
      
      - name: Build ethereumjs-monorepo
        run: |
          cd ethereumjs-monorepo
          npm i
          cd .. && tar -cjf ethereumjs.tar.bz2 ethereumjs-monorepo

      - uses: actions/upload-artifact@v4
        with:
          name: ethereumjs
          path: ethereumjs.tar.bz2
  
  build-web3:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Checkout web3.js
        uses: actions/checkout@v3
        with:
          repository: shinkee635/web3.js
          ref: v4.3address32
          path: web3.js

      - name: Build web3.js
        run: |
          cd web3.js
          yarn install --ignore-scripts
          yarn build
          cd .. && tar -cjf web3js.tar.bz2 web3.js

      - uses: actions/upload-artifact@v4
        with:
          name: web3js
          path: web3js.tar.bz2

  build-ethersjs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.0.0

      - name: Checkout ethers.js
        uses: actions/checkout@v3
        with:
          repository: shinkee635/ethers.js
          ref: address32
          path: ethers.js

      - name: Build ethers.js
        run: |
          cd ethers.js
          npm ci
          npm run build-all
          cd .. && tar -cjf ethersjs.tar.bz2 ethers.js

      - uses: actions/upload-artifact@v4
        with:
          name: ethersjs
          path: ethersjs.tar.bz2
    
  build-remix-web:
    runs-on: ubuntu-latest
        
    needs: [build-soljson, build-ethereumjs, build-web3, build-ethersjs]

    steps:
      - uses: actions/checkout@v4
      
      - name: Download soljson artifact
        uses: actions/download-artifact@v4
        with:
          name: soljson

      - name: Download ethereumjs artifact
        uses: actions/download-artifact@v4
        with:
          name: ethereumjs

      - name: Download web3 artifact
        uses: actions/download-artifact@v4
        with:
          name: web3js

      - name: Download ethersjs artifact
        uses: actions/download-artifact@v4
        with:
          name: ethersjs
        
      - name: Extract artifacts
        run: |
          tar -xjf ethereumjs.tar.bz2
          tar -xjf web3js.tar.bz2
          tar -xjf ethersjs.tar.bz2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      - name: Build project and package zip file
        run: |
          yarn install && yarn run build:production
          cd dist/apps/
          cp -r remix-ide build
          zip -r remix-ide-web.zip build

      - name: Analyze vulnerabilities
        run: yarn audit

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: remix-web
          path: dist/apps/remix-ide-web.zip

  build-remix-desktop:
    runs-on: ubuntu-latest
        
    needs: [build-soljson, build-ethereumjs, build-web3, build-ethersjs]

    steps:
      - uses: actions/checkout@v4
      
      - name: Download soljson artifact
        uses: actions/download-artifact@v4
        with:
          name: soljson

      - name: Download ethereumjs artifact
        uses: actions/download-artifact@v4
        with:
          name: ethereumjs

      - name: Download web3 artifact
        uses: actions/download-artifact@v4
        with:
          name: web3js

      - name: Download ethersjs artifact
        uses: actions/download-artifact@v4
        with:
          name: ethersjs
        
      - name: Extract artifacts
        run: |
          tar -xjf ethereumjs.tar.bz2
          tar -xjf web3js.tar.bz2
          tar -xjf ethersjs.tar.bz2

      - name: Build Remix and package zip file
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      - run: |
          yarn install && yarn run build:desktop
          cd dist/apps/
          zip -r remix-ide-desktop.zip remix-ide

      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: remix-desktop
          path: dist/apps/remix-ide-desktop.zip

  build-remix-desktop-windows:
    runs-on: windows-latest

    needs: build-remix-desktop

    steps:
    - uses: actions/checkout@v4

    - name: Download remix-ide files
      uses: actions/download-artifact@v4
      with:
        name: remix-desktop

    - name: Extract remix-ide files
      run: |
        mkdir -p apps/remixdesktop/build
        unzip remix-ide-desktop.zip -d apps/remixdesktop/build

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20.2

    - name: Build
      shell: bash
      run: |
        npm install -g yarn node-gyp
        cd apps/remixdesktop
        yarn
        ./rundist.bash
        rm -rf release/*-unpacked

    - uses: actions/upload-artifact@v4
      with:
        name: remixdesktop-windows
        path: apps/remixdesktop/release

  build-remix-desktop-linux:
    runs-on: ubuntu-latest
      
    needs: build-remix-desktop
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Download remix-ide files
      uses: actions/download-artifact@v4
      with:
        name: remix-desktop
      
    - name: Extract remix-ide files
      run: |
        mkdir -p apps/remixdesktop/build
        unzip remix-ide-desktop.zip -d apps/remixdesktop/build
      
    - name: Build
      uses: actions/setup-node@v4
      with:
        node-version: 20.2
      
    - run: |
        npm install -g yarn node-gyp
        cd apps/remixdesktop
        yarn add node-pty
        yarn --ignore-optional
        yarn add @remix-project/remix-ws-templates
        ./rundist.bash
        rm -rf release/*-unpacked

    - uses: actions/upload-artifact@v4
      with:
        name: remixdesktop-linux
        path: apps/remixdesktop/release

  build-remix-desktop-mac-arm64:
    runs-on: macos-13

    needs: build-remix-desktop
    env:
      ARCH: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Download remix-ide files
      uses: actions/download-artifact@v4
      with:
        name: remix-desktop

    - name: Extract remix-ide files
      run: |
        mkdir -p apps/remixdesktop/build
        unzip remix-ide-desktop.zip -d apps/remixdesktop/build

    - name: Setuo Node
      uses: actions/setup-node@v4
      with:
        node-version: 20.2

    - name: Build
      run: |
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        yarn config set https://github.com/:_authToken ${GITHUB_TOKEN}
        npm install -g yarn node-gyp
        pip install setuptools
        cd apps/remixdesktop
        yarn --ignore-optional
        find ./node_modules
        yarn add @remix-project/remix-ws-templates
        yarn installRipGrepMacOX${{ env.ARCH }}
        PUBLISH_FOR_PULL_REQUEST='false' USE_HARD_LINKS=false ./rundist.bash --${{ env.ARCH }}
        if [ -f release/latest-mac.yml ]; then
          cat release/latest-mac.yml
          mv release/latest-mac.yml release/latest-mac-${{ env.ARCH }}.yml
        fi
        find ./release

    - uses: actions/upload-artifact@v4
      with:
        name: remixdesktop-mac-${{ env.ARCH }}
        path: apps/remixdesktop/release

  build-remix-desktop-mac-x64:
    runs-on: macos-13

    needs: build-remix-desktop
    env:
      ARCH: x64

    steps:
    - uses: actions/checkout@v4

    - name: Download remix-ide files
      uses: actions/download-artifact@v4
      with:
        name: remix-desktop

    - name: Extract remix-ide files
      run: |
        mkdir -p apps/remixdesktop/build
        unzip remix-ide-desktop.zip -d apps/remixdesktop/build

    - name: Setuo Node
      uses: actions/setup-node@v4
      with:
        node-version: 20.2

    - name: Build
      run: |
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        yarn config set https://github.com/:_authToken ${GITHUB_TOKEN}
        npm install -g yarn node-gyp
        pip install setuptools
        cd apps/remixdesktop
        yarn --ignore-optional
        find ./node_modules
        yarn add @remix-project/remix-ws-templates
        yarn installRipGrepMacOX${{ env.ARCH }}
        PUBLISH_FOR_PULL_REQUEST='false' USE_HARD_LINKS=false ./rundist.bash --${{ env.ARCH }}
        if [ -f release/latest-mac.yml ]; then
          cat release/latest-mac.yml
          mv release/latest-mac.yml release/latest-mac-${{ env.ARCH }}.yml
        fi
        find ./release

    - uses: actions/upload-artifact@v4
      with:
        name: remixdesktop-mac-${{ env.ARCH }}
        path: apps/remixdesktop/release
        